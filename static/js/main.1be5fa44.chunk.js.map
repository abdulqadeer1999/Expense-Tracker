{"version":3,"sources":["transReducer.js","transContext.js","Child.js","App.js","reportWebVitals.js","index.js"],"names":["TransactionReducer","state","action","type","payload","initialTransactions","amount","desc","TransactionContext","createContext","TransactionProvider","children","useReducer","dispatch","Provider","value","transactions","addTransaction","transObj","Child","useContext","useState","newDesc","setDesc","newAmount","setAmount","getIncome","income","i","length","getExpense","expense","className","map","ind","onSubmit","event","preventDefault","Number","alert","placeholder","onChange","ev","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1be5fa44.chunk.js","sourcesContent":["const TransactionReducer =  ((state, action)=>{\r\n    switch(action.type){\r\n        case \"ADD_TRANSACTION\": {\r\n            return [action.payload , ...state]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n})\r\n\r\nexport default TransactionReducer;","import React, { createContext, useReducer } from \"react\";\r\nimport TransactionReducer from './transReducer';\r\n\r\nconst initialTransactions = [\r\n    { amount: 500, desc: \"Cash\" },\r\n    { amount: -50, desc: \"Cold Drink\" },\r\n    { amount: 100, desc: \"Deposit\" },\r\n    { amount: -200, desc: \"Utility Bill\" },\r\n\r\n]\r\n\r\nexport const TransactionContext = createContext(initialTransactions);\r\n\r\nexport const TransactionProvider = ({children})=> {\r\n    let [state, dispatch] = useReducer(TransactionReducer, initialTransactions);\r\n\r\n    function addTransaction(transObj){\r\n        dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: { \r\n                amount: transObj.amount, \r\n                desc: transObj.desc \r\n            },\r\n        })\r\n    }\r\n\r\n    return(\r\n        <TransactionContext.Provider value={{\r\n            transactions: state,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </TransactionContext.Provider>\r\n    )\r\n}","import React, { useContext, useState } from 'react';\r\nimport {TransactionContext} from './transContext'\r\n\r\n// import Child from './Child'\r\n\r\nfunction Child() {\r\n\r\n// let transactions = [\r\n//     {amount:500, desc: \"Cash\"},\r\n//     {amount:-40, desc: \"Book\"},\r\n//     {amount:-200, desc: \"Camera\"}\r\n// ]\r\n\r\nlet {transactions,addTransaction} = useContext(TransactionContext)\r\nlet [newDesc,setDesc] = useState(\"\");\r\nlet [newAmount,setAmount] = useState(0)\r\nconst handleAddition = (event) => {\r\n    event.preventDefault();\r\n    if (Number(newAmount) === 0){\r\n        alert(\"Please enter correct value\")\r\n        return false;\r\n    }\r\n    addTransaction ({\r\n        amount: Number(newAmount),\r\n        desc : newDesc\r\n    });\r\n    setDesc('')\r\n    setAmount(0)\r\n}\r\n\r\nconst getIncome = () => {\r\n    let income = 0;\r\n    for(var i = 0; i<transactions.length; i++){\r\n        if(transactions[i].amount > 0)\r\n        income = income + transactions[i].amount\r\n    }\r\n    return income;\r\n}\r\n\r\nconst getExpense = () => {\r\n    let expense = 0;\r\n    for (var i=0; i<transactions.length; i++){\r\n        if(transactions[i].amount < 0)\r\n        expense += transactions[i].amount\r\n    }\r\n    return expense;\r\n}\r\n\r\n  return (\r\n    <div className = \"container\">\r\n      <h1 className = \"text-center\">Expense Tracker</h1>\r\n      <h3>Your Balance   <br /> ${getIncome() + getExpense()}</h3>\r\n      <div className = \"expense-container\" >\r\n          <h3>INCOME <br /> ${getIncome()}</h3>\r\n          <h3>EXPENSE <br /> ${getExpense()}</h3>\r\n      </div>\r\n\r\n       <h3>History</h3>\r\n       <hr />\r\n       <ul className = \"transaction-list\">\r\n          {transactions.map((transObj,ind)=>{\r\n              return( <li key = {ind}>\r\n                <span>${transObj.desc}</span>\r\n                <span>${transObj.amount}</span>\r\n            </li>\r\n            )\r\n          })}\r\n  {/* <li>\r\n      <span>Cash</span>\r\n      <span>+500</span>\r\n  </li>\r\n  <li>\r\n      <span>Cash</span>\r\n      <span>+500</span>\r\n  </li>\r\n  <li>\r\n      <span>Cash</span>\r\n      <span>+500</span>\r\n  </li> */}\r\n  \r\n       </ul>\r\n\r\n       <h3>Add New Transaction</h3>\r\n\r\n       <hr />\r\n       <form className = \"transaction-form\"  onSubmit={handleAddition}>\r\n           <label>Enter Description  <br />\r\n           <input type = \"text\" value={newDesc}\r\n            placeholder = \"Enter Description\" \r\n             onChange = {(ev) => setDesc(ev.target.value)}\r\n              required />\r\n\r\n           </label>\r\n           <br />\r\n           <label>Enter Amount <br />\r\n           <input type = \"number\" value={newAmount}\r\n            placeholder= \"Enter amount \" \r\n             onChange = {(ev)=>setAmount(ev.target.value)} \r\n             required  />\r\n\r\n           </label>\r\n           <br />\r\n           <input type = \"submit\" value = \"Add Transaction\" />\r\n       </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Child;","\r\nimport './App.css';\r\nimport Child from './Child'\r\nimport {TransactionProvider} from './transContext'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n     <TransactionProvider>\r\n     <Child />\r\n     </TransactionProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}